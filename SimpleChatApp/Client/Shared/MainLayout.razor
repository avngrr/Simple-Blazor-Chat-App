@using Microsoft.AspNetCore.SignalR.Client
@inherits LayoutComponentBase
<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        Simple Blazor Chat App
        <MudSpacer />
        <LoginDisplay />
    </MudAppBar>

    <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Docked">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <CascadingValue Value="chatHub">
            @Body
        </CascadingValue>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    private List<ChatGroup> myChatGroups;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private HubConnection chatHub;
    private string CurrentUserId;
    public bool IsConnected => chatHub.State == HubConnectionState.Connected;
    protected override async Task OnInitializedAsync()
    {
        var state = await _stateProvider.GetAuthenticationStateAsync();
        var user = state.User;
        CurrentUserId = user.Claims.Where(a => a.Type == "sub").Select(a => a.Value).FirstOrDefault();
        chatHub = new HubConnectionBuilder().WithUrl(_navigationManager.ToAbsoluteUri("/chathub")).Build();       
        await chatHub.StartAsync();
        chatHub.On<string, ChatGroup, string, string>("ReceiveChatNotification", (message, chat, senderName, senderUserId) =>
        {
            if (chat.ChatUsers.Any(u => u.Id == CurrentUserId) && senderUserId != CurrentUserId)
            {
                _snackBar.Add(message, Severity.Info, config =>
                {
                    config.VisibleStateDuration = 10000;
                    config.HideTransitionDuration = 500;
                    config.ShowTransitionDuration = 500;
                    config.Action = "Chat?";
                    config.ActionColor = Color.Info;
                    config.Onclick = snackbar =>
                    {
                        _navigationManager.NavigateTo($"chat/{chat.Id}");
                        return Task.CompletedTask;
                    };
                });
            }
        });
        
    }
}